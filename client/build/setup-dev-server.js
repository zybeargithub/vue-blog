const path = require('path');
const webpack = require('webpack');
const MFS = require('memory-fs');
const clientConfig = require('./webpack.client.config');
const serverConfig = require('./webpack.server.config');
const koa2Dev = require('./koa2/dev.js')
const koa2Hot = require('./koa2/hot.js')

// 开发模式下

module.exports = function setupDevServer (app, cb) {
    let bundle;
    let template;

    const clientCompiler = webpack(clientConfig); // 编辑webpack.config.js配置
    const devMiddleware = koa2Dev(clientCompiler, {
        publicPath: clientConfig.output.publicPath,
        stats: {
            colors: true,
        },
    // noInfo: true
    });
    app.use(devMiddleware);

    // 完成事件
    clientCompiler.plugin('done', () => {
        const fs = devMiddleware.fileSystem;
        const filePath = path.join(clientConfig.output.path, 'front.html');
        console.log('clientPath', serverConfig.output.path);
        if (fs.existsSync(filePath)) {
            template = fs.readFileSync(filePath, 'utf-8');
            if (bundle) {
                console.log('ok');
                cb(bundle, template); // 执行服务端渲染
            }
        }
    });

    // hot middleware
    app.use(koa2Hot(clientCompiler));

    // console.log(serverConfig)
    // watch and update server renderer
    const serverCompiler = webpack(serverConfig);
    const mfs = new MFS();
    serverCompiler.outputFileSystem = mfs;
    serverCompiler.watch({}, (err, stats) => {
        if (err) {
            throw err;
        }
        stats = stats.toJson();
        stats.errors.forEach(err => console.error(err));
        stats.warnings.forEach(err => console.warn(err));

        console.log('serverPath', serverConfig.output.path);
        // read bundle generated by vue-ssr-webpack-plugin
        const bundlePath = path.join(serverConfig.output.path, 'vue-ssr-server-bundle.json');
        bundle = JSON.parse(mfs.readFileSync(bundlePath, 'utf-8'));
        if (template) {
            console.log('ok');
            cb(bundle, template);
        }
    });
};
